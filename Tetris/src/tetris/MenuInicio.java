/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author hidal
 */
public class MenuInicio extends javax.swing.JFrame {
    
    private TopResultados mejoresjugadas;
    private ArrayList<Integer> puntajes;
    private Sonido cancion;
    private String path;
    private String jugadaspath;
    private FileManager archivo;
    private String pathMemoria;
    private FileManager datos;
    private String info;
    private Color[][] finales;
    private Guardar boxguardar;
    
    /**
     * Creates new form Menu
     */
    public MenuInicio(Sonido cancion, String path, TopResultados mejores,String jugadaspath,FileManager archivo,String memoria) {
        this.mejoresjugadas = mejores;
        this.puntajes = archivo.getPuntajes(jugadaspath);
        this.cancion = cancion;
        this.path = path;
        this.jugadaspath = jugadaspath;
        this.archivo = archivo;
        this.mejoresjugadas.setArchivo(archivo);
        this.mejoresjugadas.setJugadaspath(jugadaspath);
        this.pathMemoria = memoria;
        this.datos = new FileManager();
        this.info = "";
        this.finales = new Color[20][10];
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnempezar = new javax.swing.JButton();
        btntop10 = new javax.swing.JButton();
        btncargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 18)); // NOI18N
        jLabel1.setText("TETRIS GAMe");

        btnempezar.setText("EMPEZAR PARTIDA");
        btnempezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnempezarActionPerformed(evt);
            }
        });

        btntop10.setText("VER TOP 10");
        btntop10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntop10ActionPerformed(evt);
            }
        });

        btncargar.setText("CARGAR PARTIDA");
        btncargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnempezar, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btntop10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(85, 85, 85)
                                .addComponent(btncargar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnempezar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntop10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncargar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btntop10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntop10ActionPerformed
        this.mejoresjugadas.setVisible(true);
        this.mejoresjugadas.setPuntajes(this.puntajes);
        this.mejoresjugadas.inicio();
        this.mejoresjugadas.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_btntop10ActionPerformed

    private void btnempezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnempezarActionPerformed
        this.archivo.cleanFile(jugadaspath);
        PantallaJuego tetrisgame = new PantallaJuego(cancion,path,jugadaspath,archivo,pathMemoria);
        tetrisgame.setPuntajes(this.puntajes);
        tetrisgame.inicio();
        tetrisgame.setVisible(true);
        tetrisgame.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_btnempezarActionPerformed

    private Color[][] valoresMatriz(String colores){
        Color [][] cargar=new Color[20][10];
        int pos=0;
        for (int fila = 0; fila < 20; fila++) {
        for (int columna = 0; columna < 10; columna++) {
                if(colores.substring(pos, pos+1).equals("1"))cargar[fila][columna]=Color.CYAN;
                if(colores.substring(pos, pos+1).equals("2"))cargar[fila][columna]=Color.ORANGE;
                if(colores.substring(pos, pos+1).equals("3"))cargar[fila][columna]=Color.YELLOW;
                if(colores.substring(pos, pos+1).equals("4"))cargar[fila][columna]=Color.GREEN;
                if(colores.substring(pos, pos+1).equals("0"))cargar[fila][columna]=null;
                pos++;
            }
        }
       return cargar;    
       
    }

    private String setNiceFormat(int number){
        if (number < 10)
            return "0" + number;
        return "" + number;
    }
    
    private void btncargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncargarActionPerformed
        
        try{
            PantallaJuego tetrisgame = new PantallaJuego(cancion,path,pathMemoria,archivo,finales);
           
            this.pathMemoria=JOptionPane.showInputDialog(boxguardar, "favor ingrese el nombre del archiv", "ABRIR", 1).toUpperCase();
             
            ArrayList<String> partidag = archivo.getDatosFromArchivo(pathMemoria);
            
            String tiempo ="";
            
            for (int i = 0; i<partidag.size()-1;i++){
                
                String dato = partidag.get(i);
                
                if (i==0){ //matriz
                    this.finales=valoresMatriz(dato.substring(0, 200));    
                }
                else if (i==1){ //nivel
                    int numero = (int) Integer.parseInt(dato);
                    tetrisgame.actualizarNivel(numero);
                }
                else if (i==2){ //ountos
                    int numero = (int) Integer.parseInt(dato);
                    tetrisgame.actualizarPuntos(numero);
                }
                else if (i==3){ //F1
                    int numero = (int) Integer.parseInt(dato);
                    ThreadBloque hilo = tetrisgame.getHilo();
                    hilo.setFigura1(numero);
                }
                else if (i==4){ //F2
                    int numero = (int) Integer.parseInt(dato);
                    ThreadBloque hilo = tetrisgame.getHilo();
                    hilo.setFigura2(numero);
                }
                else if (i==5){ //F3
                    int numero = (int) Integer.parseInt(dato);
                    ThreadBloque hilo = tetrisgame.getHilo();
                    hilo.setFigura3(numero);
                }
                else if (i==6){ //segundos
                    int numero = (int) Integer.parseInt(dato);
                    tiempo = setNiceFormat(numero) + ":";
                    
                }
                else if (i==7){ //minutos
                    int numero = (int) Integer.parseInt(dato);
                    tiempo = tiempo + setNiceFormat(numero);
                    tetrisgame.setTextToCrono(tiempo);
                }
            }
            tetrisgame.inicio();
            tetrisgame.setVisible(true);
            tetrisgame.setDefaultCloseOperation(HIDE_ON_CLOSE);
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, "PARTIDA NO ENCONTRADA","Error", JOptionPane.ERROR_MESSAGE);
        }
        
    
    }//GEN-LAST:event_btncargarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncargar;
    private javax.swing.JButton btnempezar;
    private javax.swing.JButton btntop10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
